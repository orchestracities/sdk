openapi: 3.0.0
info:
  version: 0.2.2
  title: ngsi-v2
  description: NGSI V2 API RC-2018.07
  license:
    name: Apache 2.0
    url: https://github.com/orchestracities/sdk/blob/master/LICENSE
security:
  - ApiKeyAuth: []
  - BearerAuth: []
paths:
  /:
    get:
      description: This resource does not have any attributes. Instead it offers
        the initial API affordances in the form of the links in the JSON body. 
        It is recommended to follow the "url" link values,
        [Link](https://tools.ietf.org/html/rfc5988) or Location headers where
        applicable to retrieve resources. Instead of constructing your own URLs,
        to keep your client decoupled from implementation details.
      tags:
        - API Entry Point
      operationId: Retrieve API Resources
      responses:
        "200":
          description: ""
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIEntryPoint"
              examples:
                response:
                  value:
                    entities_url: /v2/entities
                    types_url: /v2/types
                    subscriptions_url: /v2/subscriptions
                    registrations_url: /v2/registrations
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /entities:
    get:
      description: >-
        Retrieves a list of entities that match different criteria by id, type,
        pattern matching (either id or type) and/or those which match a query or
        geographical query
        (see [Simple Query Language](https://fiware.github.io/specifications/ngsiv2/stable)
        and [Geographical Queries](https://fiware.github.io/specifications/ngsiv2/stable)).
        A given entity has to match all the criteria to be retrieved
        (i.e., the criteria is combined in a logical AND way).
        Note that pattern matching query parameters are incompatible
        (i.e. mutually exclusive) with their corresponding exact matching
        parameters, i.e. `idPattern` with `id` and `typePattern` with `type`.
        The response payload is an array containing one object per matching
        entity. Each entity follows the JSON entity Representation format
        (described in [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable)
        section).
        Response code:
        
        * Successful operation uses 200 OK
        
        * Errors use a non-2xx and (optionally) an error payload.
          See subsection on
          [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: List entities
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: id
          in: query
          required: false
          description: A comma-separated list of elements. Retrieve entities whose ID
            matches one of the elements in the list. Incompatible with
            `idPattern`.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: comma-separated list of elements. Retrieve entities whose type
            matches one of the elements in the list. Incompatible with
            `typePattern`.
          schema:
            type: string
        - name: idPattern
          in: query
          required: false
          description: A correctly formated regular expression. Retrieve entities whose ID
            matches the regular expression. Incompatible with `id`.
          schema:
            type: string
        - name: typePattern
          in: query
          required: false
          description: A correctly formated regular expression. Retrieve entities whose
            type matches the regular expression. Incompatible with `type`.
          schema:
            type: string
        - name: q
          in: query
          required: false
          description: A query expression, composed of a list of statements separated by
            `;`, i.e., q=statement;statements;statement. See [Simple Query
            Language specification](https://fiware.github.io/specifications/ngsiv2/stable).
          schema:
            type: string
        - name: mq
          in: query
          required: false
          description: A query expression for attribute metadata, composed of a list of
            statements separated by `;`, i.e.,
            mq=statement1;statement2;statement3. See [Simple Query Language
            specification](https://fiware.github.io/specifications/ngsiv2/stable).
          schema:
            type: string
        - name: georel
          in: query
          required: false
          description: Spatial relationship between matching entities and a reference
            shape. See [Geographical Queries](https://fiware.github.io/specifications/ngsiv2/stable).
          schema:
            type: string
        - name: geometry
          in: query
          required: false
          description: Geografical area to which the query is restricted. See [Geographical
            Queries](https://fiware.github.io/specifications/ngsiv2/stable).
          schema:
            type: string
        - name: coords
          in: query
          required: false
          description: List of latitude-longitude pairs of coordinates separated by `;`.
            See [Geographical Queries](https://fiware.github.io/specifications/ngsiv2/stable).
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Limits the number of entities to be retrieved
          schema:
            type: number
            format: double
        - name: offset
          in: query
          required: false
          description: Establishes the offset from where entities are retrieved
          schema:
            type: number
            format: double
        - name: attrs
          in: query
          required: false
          description: Comma-separated list of attribute names whose data are to be
            included in the response. The attributes are retrieved in the order
            specified by this parameter. If this parameter is not included, the
            attributes are retrieved in arbitrary order.
          schema:
            type: string
        - name: metadata
          in: query
          required: false
          description: A list of metadata names to include in the response.
          schema:
            type: string
        - name: orderBy
          in: query
          required: false
          description: Criteria for ordering results. See [Ordering Results](https://fiware.github.io/specifications/ngsiv2/stable)
            section for details.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - count
              - keyValues
              - values
              - unique
      responses:
        "200":
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          description: JSON Entity Representation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: >-
        The payload is an object representing the entity to be created. The
        object follows the JSON entity Representation format (described in a
        [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable)
        section).
        Response:

        * Successful operation uses 201 Created or 204 No Content (if upsert
          option is used). Response includes a `Location` header with the URL
          of the created entity.
        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Create entity
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - keyValues
              - upsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntityId"
        description: JSON Entity Representation
        required: true
      responses:
        "201":
          description: When upsert option is not used
          headers:
            Location:
              description: URL of the created entity.
              schema:
                type: string
        "204":
          description: If upsert option is used
          headers:
            Location:
              description: URL of the created entity.
              schema:
                type: string
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/entities/{entityId}":
    get:
      description: >-
        The response is an object representing the entity identified by the ID.
        The object follows the JSON entity Representation format (described in a
        [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable)
        section). This operation must return one
        entity element only, but there may be more than one entity with the same
        ID (e.g. entities with same ID but different types). In such case, an
        error message is returned, with the HTTP status code set to 409
        Conflict.

        Response:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Retrieve entity
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity to be retrieved
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrs
          in: query
          required: false
          description: Comma-separated list of attribute names whose data must be included
            in the response. The attributes are retrieved in the order specified
            by this parameter. If this parameter is not included, the attributes
            are retrieved in arbitrary order, and all the attributes of the
            entity are included in the response.
          schema:
            type: string
        - name: metadata
          in: query
          required: false
          description: A list of metadata names to include in the response. See "Filtering
            out attributes and metadata" section for more detail.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - keyValues
              - values
              - unique
      responses:
        "200":
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          description: JSON Entity Representation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      description: >-
        Delete the entity.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Remove entity
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity to be deleted
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
      responses:
        "200":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/entities/{entityId}/attrs":
    get:
      description: >-
        This request is similar to retreiving the whole entity, however this one
        omits the `id` and `type` fields. Just like the general request of
        getting an entire entity, this operation must return only one entity
        element. If more than one entity with the same ID is found (e.g.
        entities with same ID but different type), an error message is returned,
        with the HTTP status code set to 409 Conflict.

        Response:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Retrieve entity attributes
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity to be retrieved
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrs
          in: query
          required: false
          description: Comma-separated list of attribute names whose data are to be
            included in the response. The attributes are retrieved in the order
            specified by this parameter. If this parameter is not included, the
            attributes are retrieved in arbitrary order, and all the attributes
            of the entity are included in the response.
          schema:
            type: string
        - name: metadata
          in: query
          required: false
          description: A list of metadata names to include in the response.
            See [Filtering out attributes and metadata](https://fiware.github.io/specifications/ngsiv2/stable)
            section for more detail.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - keyValues
              - values
              - unique
      responses:
        "200":
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          description: JSON Attribute Representation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: >-
        The request payload is an object representing the new entity attributes.
        The object follows the JSON entity Representation format (described in a
        [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable)
        above), except that `id` and `type` are not
        allowed. The attributes previously existing in the entity are removed
        and replaced by the ones in the request.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Replace all entity attributes
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity in question.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Operations options
          schema:
            type: string
            enum:
              - keyValues
              - append
      requestBody:
        $ref: "#/components/requestBodies/updateAttributes"
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: >-
        The request payload is an object representing the attributes to append
        or update. The object follows the JSON entity Representation format
        (described in [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable) 
        section), except that `id` and `type` are not allowed.
        The entity attributes are updated with the ones in the payload,
        depending on whether the `append` operation option is used or not.

        * If `append` is not used: the entity attributes are updated
          (if they previously exist) or appended (if they don't previously
          exist) with the ones in the payload.
        * If `append` is used (i.e. strict append semantics): all the attributes
          in the payload not previously existing in the entity are appended.
          In addition to that, in case some of the attributes in the payload
          already exist in the entity, an error is returned.
          
        Response:

        * Successful operation uses 204 No Content
        
        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Update or append entity attributes
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Entity id to be updated
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Operations options
          schema:
            type: string
            enum:
              - append
              - keyValues
      requestBody:
        $ref: "#/components/requestBodies/updateAttributes"
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      description: >-
        The request payload is an object representing the attributes to update.
        The object follows the JSON entity Representation format (described in
        [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable) 
        section), except that `id` and `type` are not allowed.
        The entity attributes are updated with the ones in the payload.
        In addition to that, if one or more attributes in the payload doesn't
        exist in the entity, an error is returned.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Entities
      operationId: Update existing entity attributes
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity to be updated
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Operations options
          schema:
            type: string
            enum:
              - keyValues
      requestBody:
        $ref: "#/components/requestBodies/updateAttributes"
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/entities/{entityId}/attrs/{attrName}":
    get:
      description: >-
        Returns a JSON object with the attribute data of the attribute. The
        object follows the JSON Representation for attributes  (described in
        [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable) 
        section).

        Response:

        * Successful operation uses 200 OK.

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Attributes
      operationId: Get attribute data
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrName
          in: path
          required: true
          description: Name of the attribute to be retrieved.
          schema:
            type: string
        - name: metadata
          in: query
          required: false
          description: A list of metadata names to include in the response. See
            [Filtering out attributes and metadata](https://fiware.github.io/specifications/ngsiv2/stable)
            section for more detail.
          schema:
            type: string
      responses:
        "200":
          headers:
            Content-Type:
              description: application/json
              schema:
                type: string
          description: JSON Entity Representation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attribute"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: >-
        The request payload is an object representing the new attribute data.
        Previous attribute data is replaced by the one in the request.
        The object follows the JSON Representation for attributes
        (described in [JSON Attribute Representation](https://fiware.github.io/specifications/ngsiv2/stable)
        section).

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Attributes
      operationId: Update attribute data
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity to update
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrName
          in: path
          required: true
          description: Attribute name
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/updateAttribute"
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      description: >-
        Removes an entity attribute.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Attributes
      operationId: Remove a single attribute
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrName
          in: path
          required: true
          description: Attribute name.
          schema:
            type: string
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/entities/{entityId}/attrs/{attrName}/value":
    get:
      description: >-
        This operation returns the `value` property with the value of the
        attribute.

        * If attribute value is JSON Array or Object:
          * If `Accept` header can be expanded to `application/json` or
            `text/plain` return the value as a JSON with a response type of
            application/json or text/plain (whichever is the first in `Accept`
            header or `application/json` in the case of `Accept: */*`).
          * Else return a HTTP error "406 Not Acceptable: accepted MIME types:
            application/json, text/plain"
        * If attribute value is a string, number, null or boolean:
          * If `Accept` header can be expanded to text/plain return the value
            as text. In case of a string, citation
            marks are used at the begining and end.
          * Else return a HTTP error
            "406 Not Acceptable: accepted MIME types: text/plain"
        Response:

        * Successful operation uses 200 OK.

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Attribute Value
      operationId: Get attribute value
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity in question
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrName
          in: path
          required: true
          description: Name of the attribute to be retrieved.
          schema:
            type: string
      responses:
        "200":
          description: JSON AttributeValue Representation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeValueObject"
            plain/text:
              schema:
                $ref: "#/components/schemas/AttributeValuePlain"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            plain/text:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: >-
        The request payload is the new attribute value.

        * If the request payload MIME type is `application/json`,
          then the value of the attribute is set to
          the JSON object or array coded in the payload (if the payload
          is not a valid JSON document, then an error is returned).
        * If the request payload MIME type is `text/plain`, then the following
          algorithm is applied to the payload:
          * If the payload starts and ends with citation-marks (`"`), the value
            is taken as a string (the citation marks themselves are not
            considered part of the string)
          * If `true` or `false`, the value is taken as a boolean.
          * If `null`, the value is taken as null.
          * If these first three tests 'fail', the text is interpreted as
            a number.
          * If not a valid number, then an error is returned and the attribute's
            value is unchanged.
        
        The payload MIME type in the request is specified in the `Content-Type`
        HTTP header.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Attribute Value
      operationId: Update attribute value
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityId
          in: path
          required: true
          description: Id of the entity to be updated.
          schema:
            type: string
        - name: type
          in: query
          required: false
          description: |-
            Entity type, to avoid ambiguity in the case there are several
            entities with the same entity id.
          schema:
            type: string
        - name: attrName
          in: path
          required: true
          description: Attribute name.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeValueObject"
          plain/text:
            schema:
              $ref: "#/components/schemas/AttributeValuePlain"
        description: JSON AttributeValue Representation
        required: true
      responses:
        "200":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /types/:
    get:
      description: >-
        If the `values` option is not in use, this operation returns a JSON
        array with the entity types.

        Each element is a JSON object with information about the type:

        * `type` : the entity type name.

        * `attrs` : the set of attribute names along with all the entities of
          such type, represented in a JSON object whose keys are the attribute
          names and whose values contain information of such attributes (in
          particular a list of the types used by attributes with that name along
          with all the entities).
        * `count` : the number of entities belonging to that type.

        If the `values` option is used, the operation returns a JSON array with
        a list of entity type names as strings.

        Results are ordered by entity `type` in alphabetical order.

        Response code:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Types
      operationId: Retrieve entity types
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: limit
          in: query
          required: false
          description: Limit the number of types to be retrieved.
          schema:
            type: number
            format: double
        - name: offset
          in: query
          required: false
          description: Skip a number of records.
          schema:
            type: number
            format: double
        - name: options
          in: query
          required: false
          description: Options dictionary.
          schema:
            type: string
            enum:
              - count
              - values
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntityTypeId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/types/{entityType}":
    get:
      description: >-
        This operation returns a JSON object with information about the type:

        * `attrs` : the set of attribute names along with all the entities of
          such type, represented in a JSON object whose keys are the attribute
          names and whose values contain information of such attributes (in
          particular a list of the types used by attributes with that name along
          with all the entities).
        * `count` : the number of entities belonging to that type.


        Response code:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Types
      operationId: Retrieve entity type
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: entityType
          in: path
          required: true
          description: Entity Type
          schema:
            type: string
      responses:
        "200":
          description: EntityType Representation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityType"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /subscriptions:
    get:
      description: >-
        Returns a list of all the subscriptions present in the system.

        Response:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload.See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Subscriptions
      operationId: Retrieve subscriptions
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: limit
          in: query
          required: false
          description: Limit the number of types to be retrieved
          schema:
            type: number
            format: double
        - name: offset
          in: query
          required: false
          description: Skip a number of records
          schema:
            type: number
            format: double
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - count
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SubscriptionId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: >-
        Creates a new subscription.

        The subscription is represented by a JSON object as described at the
        beginning of this section.

        Response:

        * Successful operation uses 201 Created

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Subscriptions
      operationId: Create a new subscription
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
      requestBody:
        $ref: "#/components/requestBodies/Subscription"
      responses:
        "201":
          description: ""
          headers:
            Location:
              description: URL of the created subscription.
              schema:
                type: string
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/subscriptions/{subscriptionId}":
    get:
      description: >-
        The response is the subscription represented by a JSON object as
        described at the beginning of this

        section.

        Response:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Subscriptions
      operationId: Retrieve subscription
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: subscriptionId
          in: path
          required: true
          description: subscription Id.
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubscriptionId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      description: >-
        Cancels subscription.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Subscriptions
      operationId: Delete subscription
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: subscriptionId
          in: path
          required: true
          description: subscription Id.
          schema:
            type: string
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      description: >-
        Only the fields included in the request are updated in the subscription.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Subscriptions
      operationId: Update subscription
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: subscriptionId
          in: path
          required: true
          description: subscription Id.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Subscription"
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /registrations:
    get:
      description: Lists all the context provider registrations
        present in the system.
      tags:
        - Registrations
      operationId: Retrieve registrations
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: limit
          in: query
          required: false
          description: Limit the number of types to be retrieved
          schema:
            type: number
            format: double
        - name: offset
          in: query
          required: false
          description: Skip a number of records
          schema:
            type: number
            format: double
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - count
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RegistrationId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: >-
        Creates a new context provider registration. This is typically used for
        binding context sources as providers of certain data. The registration
        is represented by a JSON object as described at the beginning of this
        section.

        Response:

        * Successful operation uses 201 Created

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Registrations
      operationId: Create registrations
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
      requestBody:
        $ref: "#/components/requestBodies/Registration"
      responses:
        "201":
          description: ""
          headers:
            Location:
              description: URL of the created registration.
              schema:
                type: string
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/registrations/{registrationId}":
    get:
      description: >-
        The response is the registration represented by a JSON object as
        described at the beginning of this section.

        Response:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Registrations
      operationId: Retrieve registration
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: registrationId
          in: path
          required: true
          description: registration Id.
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegistrationId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      description: >-
        Creates a new context provider registration. This is typically used for
        binding context sources as providers of certain data. The registration
        is represented by a JSON object as described at the beginning of this
        section.

        Response:

        * Successful operation uses 201 Created

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Registrations
      operationId: Update registration
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: registrationId
          in: path
          required: true
          description: registration Id.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Registration"
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      description: >-
        Cancels a context provider registration.

        Response:

        * Successful operation uses 204 No Content

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Registrations
      operationId: Delete registration
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: registrationId
          in: path
          required: true
          description: registration Id.
          schema:
            type: string
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /op/update:
    post:
      description: >-
        This operation allows to create, update and/or delete several entities
        in a single batch operation.

        The payload is an object with two properties:

        + `actionType`, to specify the kind of update action to do: either
          `append`, `appendStrict`, `update`, `delete`.
        + `entities`, an array of entities, each one specified using the JSON
          entity Representation format (described in the section
          [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable)).

          
        Response:

        * Successful operation uses 204 No Content.

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Batch Operations
      operationId: Update
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - keyValues
      requestBody:
        content:
          application/json:
            schema:
              title: BatchOperation
              required:
                - actionType
                - entities
              properties:
                actionType:
                  type: string
                  enum:
                    - append
                    - appendStrict
                    - update
                    - delete
                    - replace
                entities:
                  type: array
                  items:
                    $ref: "#/components/schemas/EntityId"
        required: true
      responses:
        "204":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /op/query:
    post:
      description: >-
        The response payload is an Array containing one object per matching
        entity, or an empty array `[]` if no entities are found.
        The entities follow the JSON entity Representation format
        (described in the section [JSON Entity Representation](https://fiware.github.io/specifications/ngsiv2/stable)).

        The payload may contain the following elements (all of them optional):

        + `entities`: a list of entites to search for. Each element is
          represented by a JSON object with the following elements:
            + `id` or `idPattern`: Id or pattern of the affected entities.
              Both cannot be used at the same time,
              but at least one of them must be present.
            + `type` or `typePattern`: Type or type pattern of the entities to
              search for. Both cannot be used at
              the same time. If omitted, it means "any entity type".
        + `attributes`: a list of attribute names to search for. If omitted,
          it means "all attributes".


        Response code:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Batch Operations
      operationId: Query
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: limit
          in: query
          required: false
          description: Limit the number of entities to be retrieved.
          schema:
            type: number
            format: double
        - name: offset
          in: query
          required: false
          description: Skip a number of records.
          schema:
            type: number
            format: double
        - name: orderBy
          in: query
          required: false
          description: |-
            Criteria for ordering results.
            See "Ordering Results" section for details.
          schema:
            type: string
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - count
              - keyValues
              - values
              - unique
      requestBody:
        content:
          application/json:
            schema:
              properties:
                entities:
                  type: array
                  items:
                    title: QueryPattern
                    type: object
                    properties:
                      id:
                        type: string
                      idPattern:
                        type: string
                      type:
                        type: string
                      typePattern:
                        type: string
                attrs:
                  type: array
                  items:
                    type: string
                expression:
                  type: object
                  properties:
                    q:
                      type: string
                    mq:
                      type: string
                    georel:
                      type: string
                    geometry:
                      type: string
                    coords:
                      type: string
                metadata:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                   $ref: "#/components/schemas/EntityId"
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /op/notify:
    post:
      description: >-
        This operation is intended to consume a notification payload so that all
        the entity data included by such notification is persisted, overwriting
        if necessary. This operation is useful when one NGSIv2 endpoint is
        subscribed to another NGSIv2 endpoint (federation scenarios). The
        request payload must be an NGSIv2 notification payload. The behaviour
        must be exactly the same as POST /v2/op/update with actionType equal to
        append.

        Response code:

        * Successful operation uses 200 OK

        * Errors use a non-2xx and (optionally) an error payload. See subsection
          on [Error Responses](https://fiware.github.io/specifications/ngsiv2/stable)
          for more details.
      tags:
        - Batch Operations
      operationId: Notify
      parameters:
        - in: header
          name: Fiware-Service
          schema:
            type: string
          required: false
        - in: header
          name: Fiware-ServicePath
          schema:
            type: string
          required: false
        - name: options
          in: query
          required: false
          description: Options dictionary
          schema:
            type: string
            enum:
              - keyValues
      requestBody:
        $ref: "#/components/requestBodies/Subscription"
      responses:
        "200":
          description: ""
        default:
          description: error payload
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
servers:
  - url: https://api.s.orchestracities.com/context/v2
components:
  requestBodies:
    updateAttribute:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Attribute"
      required: true
    updateAttributes:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Entity"
      required: true
    Subscription:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Subscription"
      required: true
    Registration:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Registration"
      required: true
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-Gravitee-Api-Key
      in: header
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      description: >- 
        All NGSIv2 server implementations must use the following HTTP response
        codes and error texts. However, the particular text used for description
        field is an implementation specific aspect. Error list (HTTP response
        code in parenthesis): 
        
        * `ParseError` (400). The incoming JSON payload cannot be parsed.
        
        * `BadRequest` (400). The incoming request is invalid in this context.
        
        * `NotFound` (404). The resource (entity, subscription,
        etc.) referred in the request has not been found.
        
        * `TooManyResults`
        (409). There are several results that match with the resource
        identification used in the request.
        
        * `ContentLengthRequired` (411).
        Zero/No Content-Length in PUT/POST/PATCH request.
        
        * `RequestEntityTooLarge` (413). Payload is too large
        
        * `UnsupportedMediaType` (415). Request content type is not supported.
        
        * `InvalidModification` (422). Some piece of information is missing in
        payload.
        
        * `NotSupportedQuery` (422). The implementation does not
        support the query issued.
        
        * `NoResourcesAvailable` (413). There are no
        server resources to fulfill the client request. New error codes may be
        defined in new iterations of this specificatio."
      type: object
      required:
        - error
      properties:
        error:
          type: string
        description:
          type: string
      example:
        error: operation not supported
        description: >- 
          this implementation of NGSI v2 does not support the called operation
    AttributeValueObject:
      type: object
      example:
        address: Ronda de la Comunicacion s/n
        zipCode: 28050
        city: Madrid
        country: Spain
    AttributeValuePlain:
      oneOf:
      - type: string
      - type: integer
      - type: number
      - type: boolean
      example:
        50
    Attribute:
      type: object
      required:
        - value
        - type
        - metadata
      properties:
        value:
          type: object
        type:
          type: string
        metadata:
          type: object
      example:
        value: 35.6
        type: Number
        metadata:
          accuracy:
            value: 2
            type: Number
    EntityType:
      type: object
      required:
        - attrs
        - count
      properties:
        attrs:
          type: object
        count:
          type: integer
      example:
        attrs:
          pressure:
            types:
              - Number
          humidity:
            types:
              - percentage
          emperature:
            types:
              - urn:phenomenum:temperature
        count: 7
    EntityTypeId:
      allOf:
        - $ref: '#/components/schemas/EntityType'
        - type: object
          required:
          - type
          properties:
            type:
              type: string
      example:
        type: "Car"
        attrs:
          pressure:
            types:
              - Number
          humidity:
            types:
              - percentage
          emperature:
            types:
              - urn:phenomenum:temperature
        count: 7
    EntityId:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
        id:
          type: string
      example:
        type: Room
        id: DC_S1-D41
        temperature:
          value: 35.6
          type: Number
          metadata:
            accuracy:
              value: 2
              type: Number
    Entity:
      type: object
      example:
        temperature:
          value: 35.6
          type: Number
          metadata:
            accuracy:
              value: 2
              type: Number
        pressure:
          value: 100
          type: Number
    Subscription:
      type: object
      required:
        - subject
        - notification
      properties:
        description:
          type: string
        subject:
          type: object
          properties:
            entities:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  idPattern:
                    type: string
                  type:
                    type: string
                  typePattern:
                    type: string
            conditions:
              type: object
              properties:
                attrs:
                  type: array
                  items:
                    type: string
                expression:
                  type: object
                  properties:
                    q:
                      type: string
                    mq:
                      type: string
                    georel:
                      type: string
                    geometry:
                      type: string
                    coords:
                      type: string
        notification:
          type: object
          properties:
            attrs:
              type: string
            exceptAttrs:
              type: string
            http:
              type: object
              properties:
                url:
                  type: string
                  format: uri
            httpCustom:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                method:
                  type: string
                  enum:
                    - GET
                    - PUT
                    - POST
                    - DELETE
                    - PATCH
                    - HEAD
                    - OPTIONS
                    - TRACE
                    - CONNECT
                qs:
                  type: object
                headers:
                  type: object
                payload:
                  type: string
        expires:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - active
            - inactive
        throttling:
          type: integer
          format: int32
    SubscriptionId:
      allOf:
        - $ref: '#/components/schemas/Subscription'
        - type: object
          required:
           - id
          properties:
            id:
              type: string
    Registration:
      type: object
      required:
       - provider
       - dataProvided
      properties:
        description:
          type: string
        provider:
          $ref: "#/components/schemas/Provider"
        dataProvided:
          $ref: "#/components/schemas/DataProvided"
        expires:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - active
            - inactive
    RegistrationId:
      allOf:
        - $ref: '#/components/schemas/Registration'
        - type: object
          required:
           - id
          properties:
            id:
              type: string
    Provider:
      type: object
      properties:
        http:
          type: object
          properties:
            url:
              type: string
              format: uri
        supportedForwardingMode:
          type: string
          enum:
            - none
            - query
            - update
            - all
    DataProvided:
      type: object
      properties:
        entities:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              idPattern:
                type: string
              type:
                type: string
              typePattern:
                type: string
        attributes:
          type: array
          items:
            type: string
        expression:
          type: object
          properties:
            georel:
              type: string
            geometry:
              type: string
            coords:
              type: string
    APIEntryPoint:
      type: object
      required:
        - entities_url
        - types_url
        - subscriptions_url
        - registrations_url
      properties:
        entities_url:
          description: URL which points to the entities resource
          type: string
        types_url:
          description: URL which points to the types resource
          type: string
        subscriptions_url:
          description: URL which points to the subscriptions resource
          type: string
        registrations_url:
          description: URL which points to the registrations resource
          type: string