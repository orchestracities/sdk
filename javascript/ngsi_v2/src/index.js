/**
 * ngsi_v2
 * NGSI V2 API RC-2018.07
 *
 * The version of the OpenAPI document: 0.2.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import APIEntryPoint from './model/APIEntryPoint';
import Attribute from './model/Attribute';
import AttributeValueObject from './model/AttributeValueObject';
import AttributeValuePlain from './model/AttributeValuePlain';
import BatchNotify from './model/BatchNotify';
import BatchQuery from './model/BatchQuery';
import BatchQueryExpression from './model/BatchQueryExpression';
import BatchUpdate from './model/BatchUpdate';
import DataProvided from './model/DataProvided';
import DataProvidedExpression from './model/DataProvidedExpression';
import Entity from './model/Entity';
import EntityType from './model/EntityType';
import EntityTypeBody from './model/EntityTypeBody';
import ErrorResponse from './model/ErrorResponse';
import Provider from './model/Provider';
import QueryPattern from './model/QueryPattern';
import Registration from './model/Registration';
import RegistrationBody from './model/RegistrationBody';
import Subscription from './model/Subscription';
import SubscriptionBody from './model/SubscriptionBody';
import SubscriptionBodyNotification from './model/SubscriptionBodyNotification';
import SubscriptionBodyNotificationHttp from './model/SubscriptionBodyNotificationHttp';
import SubscriptionBodyNotificationHttpCustom from './model/SubscriptionBodyNotificationHttpCustom';
import SubscriptionBodySubject from './model/SubscriptionBodySubject';
import SubscriptionBodySubjectConditions from './model/SubscriptionBodySubjectConditions';
import APIEntryPointApi from './api/APIEntryPointApi';
import AttributeValueApi from './api/AttributeValueApi';
import AttributesApi from './api/AttributesApi';
import BatchOperationsApi from './api/BatchOperationsApi';
import EntitiesApi from './api/EntitiesApi';
import RegistrationsApi from './api/RegistrationsApi';
import SubscriptionsApi from './api/SubscriptionsApi';
import TypesApi from './api/TypesApi';

/**
 * NGSI_V2_API_RC_2018_07.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var NgsiV2 = require('index'); // See note below*.
 * var xxxSvc = new NgsiV2.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new NgsiV2.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new NgsiV2.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new NgsiV2.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 0.2.2
 */
export {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient,
  /**
   * The APIEntryPoint model constructor.
   * @property {module:model/APIEntryPoint}
   */
  APIEntryPoint,
  /**
   * The Attribute model constructor.
   * @property {module:model/Attribute}
   */
  Attribute,
  /**
   * The AttributeValueObject model constructor.
   * @property {module:model/AttributeValueObject}
   */
  AttributeValueObject,
  /**
   * The AttributeValuePlain model constructor.
   * @property {module:model/AttributeValuePlain}
   */
  AttributeValuePlain,
  /**
   * The BatchNotify model constructor.
   * @property {module:model/BatchNotify}
   */
  BatchNotify,
  /**
   * The BatchQuery model constructor.
   * @property {module:model/BatchQuery}
   */
  BatchQuery,
  /**
   * The BatchQueryExpression model constructor.
   * @property {module:model/BatchQueryExpression}
   */
  BatchQueryExpression,
  /**
   * The BatchUpdate model constructor.
   * @property {module:model/BatchUpdate}
   */
  BatchUpdate,
  /**
   * The DataProvided model constructor.
   * @property {module:model/DataProvided}
   */
  DataProvided,
  /**
   * The DataProvidedExpression model constructor.
   * @property {module:model/DataProvidedExpression}
   */
  DataProvidedExpression,
  /**
   * The Entity model constructor.
   * @property {module:model/Entity}
   */
  Entity,
  /**
   * The EntityType model constructor.
   * @property {module:model/EntityType}
   */
  EntityType,
  /**
   * The EntityTypeBody model constructor.
   * @property {module:model/EntityTypeBody}
   */
  EntityTypeBody,
  /**
   * The ErrorResponse model constructor.
   * @property {module:model/ErrorResponse}
   */
  ErrorResponse,
  /**
   * The Provider model constructor.
   * @property {module:model/Provider}
   */
  Provider,
  /**
   * The QueryPattern model constructor.
   * @property {module:model/QueryPattern}
   */
  QueryPattern,
  /**
   * The Registration model constructor.
   * @property {module:model/Registration}
   */
  Registration,
  /**
   * The RegistrationBody model constructor.
   * @property {module:model/RegistrationBody}
   */
  RegistrationBody,
  /**
   * The Subscription model constructor.
   * @property {module:model/Subscription}
   */
  Subscription,
  /**
   * The SubscriptionBody model constructor.
   * @property {module:model/SubscriptionBody}
   */
  SubscriptionBody,
  /**
   * The SubscriptionBodyNotification model constructor.
   * @property {module:model/SubscriptionBodyNotification}
   */
  SubscriptionBodyNotification,
  /**
   * The SubscriptionBodyNotificationHttp model constructor.
   * @property {module:model/SubscriptionBodyNotificationHttp}
   */
  SubscriptionBodyNotificationHttp,
  /**
   * The SubscriptionBodyNotificationHttpCustom model constructor.
   * @property {module:model/SubscriptionBodyNotificationHttpCustom}
   */
  SubscriptionBodyNotificationHttpCustom,
  /**
   * The SubscriptionBodySubject model constructor.
   * @property {module:model/SubscriptionBodySubject}
   */
  SubscriptionBodySubject,
  /**
   * The SubscriptionBodySubjectConditions model constructor.
   * @property {module:model/SubscriptionBodySubjectConditions}
   */
  SubscriptionBodySubjectConditions,
  /**
   * The APIEntryPointApi service constructor.
   * @property {module:api/APIEntryPointApi}
   */
  APIEntryPointApi,
  /**
   * The AttributeValueApi service constructor.
   * @property {module:api/AttributeValueApi}
   */
  AttributeValueApi,
  /**
   * The AttributesApi service constructor.
   * @property {module:api/AttributesApi}
   */
  AttributesApi,
  /**
   * The BatchOperationsApi service constructor.
   * @property {module:api/BatchOperationsApi}
   */
  BatchOperationsApi,
  /**
   * The EntitiesApi service constructor.
   * @property {module:api/EntitiesApi}
   */
  EntitiesApi,
  /**
   * The RegistrationsApi service constructor.
   * @property {module:api/RegistrationsApi}
   */
  RegistrationsApi,
  /**
   * The SubscriptionsApi service constructor.
   * @property {module:api/SubscriptionsApi}
   */
  SubscriptionsApi,
  /**
   * The TypesApi service constructor.
   * @property {module:api/TypesApi}
   */
  TypesApi,
};
