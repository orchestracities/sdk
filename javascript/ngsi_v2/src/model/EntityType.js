/**
 * ngsi_v2
 * NGSI V2 API RC-2018.07
 *
 * The version of the OpenAPI document: 0.2.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EntityType model module.
 * @module model/EntityType
 * @version 0.2.2
 */
class EntityType {
  /**
   * Constructs a new <code>EntityType</code>.
   * @alias module:model/EntityType
   * @param attrs {Object}
   * @param count {Number}
   * @param type {String}
   */
  constructor(attrs, count, type) {
    EntityType.initialize(this, attrs, count, type);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, attrs, count, type) {
    obj.attrs = attrs;
    obj.count = count;
    obj.type = type;
  }

  /**
   * Constructs a <code>EntityType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EntityType} obj Optional instance to populate.
   * @return {module:model/EntityType} The populated <code>EntityType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EntityType();

      if (data.hasOwnProperty('attrs')) {
        obj.attrs = ApiClient.convertToType(data.attrs, Object);
      }
      if (data.hasOwnProperty('count')) {
        obj.count = ApiClient.convertToType(data.count, 'Number');
      }
      if (data.hasOwnProperty('type')) {
        obj.type = ApiClient.convertToType(data.type, 'String');
      }
    }
    return obj;
  }
}

/**
 * @member {Object} attrs
 */
EntityType.prototype.attrs = undefined;

/**
 * @member {Number} count
 */
EntityType.prototype.count = undefined;

/**
 * @member {String} type
 */
EntityType.prototype.type = undefined;

export default EntityType;
