/**
 * ngsi_v2
 * NGSI V2 API RC-2018.07
 *
 * The version of the OpenAPI document: 0.2.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attribute model module.
 * @module model/Attribute
 * @version 0.2.2
 */
class Attribute {
  /**
   * Constructs a new <code>Attribute</code>.
   * @alias module:model/Attribute
   * @param value {Object}
   * @param type {String}
   * @param metadata {Object}
   */
  constructor(value, type, metadata) {
    Attribute.initialize(this, value, type, metadata);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, value, type, metadata) {
    obj.value = value;
    obj.type = type;
    obj.metadata = metadata;
  }

  /**
   * Constructs a <code>Attribute</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Attribute} obj Optional instance to populate.
   * @return {module:model/Attribute} The populated <code>Attribute</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Attribute();

      if (data.hasOwnProperty('value')) {
        obj.value = ApiClient.convertToType(data.value, Object);
      }
      if (data.hasOwnProperty('type')) {
        obj.type = ApiClient.convertToType(data.type, 'String');
      }
      if (data.hasOwnProperty('metadata')) {
        obj.metadata = ApiClient.convertToType(data.metadata, Object);
      }
    }
    return obj;
  }
}

/**
 * @member {Object} value
 */
Attribute.prototype.value = undefined;

/**
 * @member {String} type
 */
Attribute.prototype.type = undefined;

/**
 * @member {Object} metadata
 */
Attribute.prototype.metadata = undefined;

export default Attribute;
