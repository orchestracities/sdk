/**
 * ngsi_v2
 * NGSI V2 API RC-2018.07
 *
 * The version of the OpenAPI document: 0.2.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SubscriptionBodyNotificationHttp from './SubscriptionBodyNotificationHttp';

/**
 * The Provider model module.
 * @module model/Provider
 * @version 0.2.2
 */
class Provider {
  /**
   * Constructs a new <code>Provider</code>.
   * @alias module:model/Provider
   */
  constructor() {
    Provider.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>Provider</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Provider} obj Optional instance to populate.
   * @return {module:model/Provider} The populated <code>Provider</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Provider();

      if (data.hasOwnProperty('http')) {
        obj['http'] = SubscriptionBodyNotificationHttp.constructFromObject(
          data['http']
        );
      }
      if (data.hasOwnProperty('supportedForwardingMode')) {
        obj['supportedForwardingMode'] = ApiClient.convertToType(
          data['supportedForwardingMode'],
          'String'
        );
      }
    }
    return obj;
  }
}

/**
 * @member {module:model/SubscriptionBodyNotificationHttp} http
 */
Provider.prototype['http'] = undefined;

/**
 * @member {module:model/Provider.SupportedForwardingModeEnum} supportedForwardingMode
 */
Provider.prototype['supportedForwardingMode'] = undefined;

/**
 * Allowed values for the <code>supportedForwardingMode</code> property.
 * @enum {String}
 * @readonly
 */
Provider['SupportedForwardingModeEnum'] = {
  /**
   * value: "none"
   * @const
   */
  none: 'none',

  /**
   * value: "query"
   * @const
   */
  query: 'query',

  /**
   * value: "update"
   * @const
   */
  update: 'update',

  /**
   * value: "all"
   * @const
   */
  all: 'all',
};

export default Provider;
