/**
 * ngsi_v2
 * NGSI V2 API RC-2018.07
 *
 * The version of the OpenAPI document: 0.2.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Entity model module.
 * @module model/Entity
 * @version 0.2.2
 */
class Entity {
  /**
   * Constructs a new <code>Entity</code>.
   * @alias module:model/Entity
   * @extends Object
   * @param type {String}
   * @param id {String}
   */
  constructor(type, id) {
    Entity.initialize(this, type, id);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, type, id) {
    obj.type = type;
    obj.id = id;
  }

  /**
   * Constructs a <code>Entity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Entity} obj Optional instance to populate.
   * @return {module:model/Entity} The populated <code>Entity</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Entity();

      ApiClient.constructFromObject(data, obj, 'Object');

      if (data.hasOwnProperty('type')) {
        obj.type = ApiClient.convertToType(data.type, 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj.id = ApiClient.convertToType(data.id, 'String');
      }
    }
    return obj;
  }
}

/**
 * @member {String} type
 */
Entity.prototype.type = undefined;

/**
 * @member {String} id
 */
Entity.prototype.id = undefined;

export default Entity;
