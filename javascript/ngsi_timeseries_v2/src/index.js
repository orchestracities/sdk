/**
 * ngsi_timeseries_v2
 * QuantumLeap API
 *
 * The version of the OpenAPI document: 0.1.2
 * Contact: info@orchestracities.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from './ApiClient';
import AttributeValues from './model/AttributeValues';
import Entity from './model/Entity';
import EntityIndexedValues from './model/EntityIndexedValues';
import ErrorResponse from './model/ErrorResponse';
import IndexArray from './model/IndexArray';
import IndexedAllAttribute from './model/IndexedAllAttribute';
import IndexedAttribute from './model/IndexedAttribute';
import IndexedAttributeTypes from './model/IndexedAttributeTypes';
import IndexedAttributeValue from './model/IndexedAttributeValue';
import IndexedEntity from './model/IndexedEntity';
import IndexedEntityAttribute from './model/IndexedEntityAttribute';
import IndexedEntityType from './model/IndexedEntityType';
import IndexedEntityTypeAttribute from './model/IndexedEntityTypeAttribute';
import IndexedEntityTypeAttributeValue from './model/IndexedEntityTypeAttributeValue';
import IndexedEntityTypeEntities from './model/IndexedEntityTypeEntities';
import IndexedEntityTypeValue from './model/IndexedEntityTypeValue';
import IndexedEntityValue from './model/IndexedEntityValue';
import IndexedValues from './model/IndexedValues';
import Notification from './model/Notification';
import Status from './model/Status';
import ValuesArray from './model/ValuesArray';
import Version from './model/Version';
import InputApi from './api/InputApi';
import MetaApi from './api/MetaApi';
import QueriesApi from './api/QueriesApi';

/**
 * QuantumLeap_API.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var NgsiTimeseriesV2 = require('index'); // See note below*.
 * var xxxSvc = new NgsiTimeseriesV2.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new NgsiTimeseriesV2.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new NgsiTimeseriesV2.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new NgsiTimeseriesV2.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 0.1.2
 */
export {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient,
  /**
   * The AttributeValues model constructor.
   * @property {module:model/AttributeValues}
   */
  AttributeValues,
  /**
   * The Entity model constructor.
   * @property {module:model/Entity}
   */
  Entity,
  /**
   * The EntityIndexedValues model constructor.
   * @property {module:model/EntityIndexedValues}
   */
  EntityIndexedValues,
  /**
   * The ErrorResponse model constructor.
   * @property {module:model/ErrorResponse}
   */
  ErrorResponse,
  /**
   * The IndexArray model constructor.
   * @property {module:model/IndexArray}
   */
  IndexArray,
  /**
   * The IndexedAllAttribute model constructor.
   * @property {module:model/IndexedAllAttribute}
   */
  IndexedAllAttribute,
  /**
   * The IndexedAttribute model constructor.
   * @property {module:model/IndexedAttribute}
   */
  IndexedAttribute,
  /**
   * The IndexedAttributeTypes model constructor.
   * @property {module:model/IndexedAttributeTypes}
   */
  IndexedAttributeTypes,
  /**
   * The IndexedAttributeValue model constructor.
   * @property {module:model/IndexedAttributeValue}
   */
  IndexedAttributeValue,
  /**
   * The IndexedEntity model constructor.
   * @property {module:model/IndexedEntity}
   */
  IndexedEntity,
  /**
   * The IndexedEntityAttribute model constructor.
   * @property {module:model/IndexedEntityAttribute}
   */
  IndexedEntityAttribute,
  /**
   * The IndexedEntityType model constructor.
   * @property {module:model/IndexedEntityType}
   */
  IndexedEntityType,
  /**
   * The IndexedEntityTypeAttribute model constructor.
   * @property {module:model/IndexedEntityTypeAttribute}
   */
  IndexedEntityTypeAttribute,
  /**
   * The IndexedEntityTypeAttributeValue model constructor.
   * @property {module:model/IndexedEntityTypeAttributeValue}
   */
  IndexedEntityTypeAttributeValue,
  /**
   * The IndexedEntityTypeEntities model constructor.
   * @property {module:model/IndexedEntityTypeEntities}
   */
  IndexedEntityTypeEntities,
  /**
   * The IndexedEntityTypeValue model constructor.
   * @property {module:model/IndexedEntityTypeValue}
   */
  IndexedEntityTypeValue,
  /**
   * The IndexedEntityValue model constructor.
   * @property {module:model/IndexedEntityValue}
   */
  IndexedEntityValue,
  /**
   * The IndexedValues model constructor.
   * @property {module:model/IndexedValues}
   */
  IndexedValues,
  /**
   * The Notification model constructor.
   * @property {module:model/Notification}
   */
  Notification,
  /**
   * The Status model constructor.
   * @property {module:model/Status}
   */
  Status,
  /**
   * The ValuesArray model constructor.
   * @property {module:model/ValuesArray}
   */
  ValuesArray,
  /**
   * The Version model constructor.
   * @property {module:model/Version}
   */
  Version,
  /**
   * The InputApi service constructor.
   * @property {module:api/InputApi}
   */
  InputApi,
  /**
   * The MetaApi service constructor.
   * @property {module:api/MetaApi}
   */
  MetaApi,
  /**
   * The QueriesApi service constructor.
   * @property {module:api/QueriesApi}
   */
  QueriesApi,
};
