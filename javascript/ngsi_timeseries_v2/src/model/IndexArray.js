/**
 * ngsi_timeseries_v2
 * QuantumLeap API
 *
 * The version of the OpenAPI document: 0.1.2
 * Contact: info@orchestracities.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IndexArray model module.
 * @module model/IndexArray
 * @version 0.1.2
 */
class IndexArray extends Array {
  /**
   * Constructs a new <code>IndexArray</code>.
   * Array of the timestamps which are indexes of the response for the requested data. It&#39;s a parallel array to &#39;values&#39;. The timestamp will be in the ISO8601 format (e.g. 2010-10-10T07:09:00.792) or in milliseconds since epoch whichever format was used in the input (notification), but ALWAYS in UTC. When using aggregation options, the format of this remains the same, only the semantics will change. For example, if aggrPeriod is day, each index will be a valid timestamp of a moment in the corresponding day.
   * @alias module:model/IndexArray
   * @extends Array
   */
  constructor() {
    super();

    IndexArray.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>IndexArray</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IndexArray} obj Optional instance to populate.
   * @return {module:model/IndexArray} The populated <code>IndexArray</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IndexArray();

      ApiClient.constructFromObject(data, obj, 'String');
    }
    return obj;
  }
}

export default IndexArray;
